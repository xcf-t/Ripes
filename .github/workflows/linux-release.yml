name: Ubuntu 22.04 / Qt 6.10.0

on: workflow_dispatch

jobs:
  buildUbuntu:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        build-type: [Release]

    steps:

    - name: Job info
      run: |
        echo "GitHub Ref: ${{ github.ref }}"
        echo "Event: ${{ github.event }}"

    - name: get container ready for build
      run: |
        sudo apt-get update
        sudo apt-get upgrade -y
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -q --force-yes \
        automake cmake git wget libfuse2 desktop-file-utils tree \
        build-essential libgl1-mesa-dev libxkbcommon-x11-0 libpulse-dev \
        libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 \
        libxcb-xinerama0 libxcb-composite0 libxcb-cursor0 libxcb-damage0 \
        libxcb-dpms0 libxcb-dri2-0 libxcb-dri3-0 libxcb-ewmh2 libxcb-glx0 \
        libxcb-present0 libxcb-randr0 libxcb-record0 libxcb-render0 libxcb-res0 \
        libxcb-screensaver0 libxcb-shape0 libxcb-shm0 libxcb-sync1 libxcb-util1 libegl1 \
        ninja-build

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.3.*'
        py7zrversion: '>=0.20.2'
        version: '6.10.0'
        host: 'linux'
        target: 'desktop'
        arch: 'linux_gcc_64'
        modules: 'qtcharts'

    - name: checkout sources
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: build Ripes
      run: |
        echo "--------------------------------------------------------------"
        echo "building desktop"
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} . -GNinja
        ninja

    - name: package artifacts
      run: |
        mkdir -p appdir/usr/bin/
        mv Ripes appdir/usr/bin/
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        source .github/workflows/scripts/set_version.sh
        export VERSION=${RIPES_VERSION}-linux # linuxdeployqt uses this for naming the package
        echo "Version is: ${VERSION}"
        ./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract-and-run appdir/usr/share/applications/*.desktop \
          -appimage -verbose=2 -extra-plugins=iconengines

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.build-type }}_executable
        path: Ripes*.AppImage*
